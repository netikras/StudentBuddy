apply plugin: 'war'
apply from: "$rootProject.rootDir/conf/global.gradle"

loadDep "servlet"
loadDep "spring-web"
loadDep "spring-aspects"
loadDep "commons"
loadDep "simple-jndi"
loadDep "testing"

loadProj ':api:api-public'
loadProj ':core:datamodel:data-private'
loadProj ':commons'
loadProj ':core:services'


enableApiAnnotations project


task cleanRest() {
    doLast {
        cleanApiAnnotations project
    }
}

cleanRest.finalizedBy build


def tomcatHomeLocal = '/opt/tomcat/apache-tomcat-8.5.11'


task buildWar(type: War, dependsOn: []) {
    evaluationDependsOn(":core:datamodel:data-public")
    evaluationDependsOn(":core:datamodel:data-private")
}


def warname = "stubu"

task deployLocal(type: Copy, dependsOn: ['buildWar']) {
    description = "Deploys the module to local web-container"
    mustRunAfter "undeployLocal"


//    from war.archivePath
    from "${buildDir}/libs/"
    into "${tomcatHomeLocal}/webapps"
    include "*.war"
    print "Predicted filename: " + project.name + "-" + project.version + ".war"
    rename {String fileName ->
        fileName.replace(project.name + "-" + project.version + ".war", warname + ".war")
    }

    doLast {
        println "Deploying application locally"
    }
}

task undeployLocal(type: Delete) {
    description = "Undeploys module from the local web-container"

//    def warname = "${project.name}"

    doLast {
        println "Undeploying application locally"
        file("${tomcatHomeLocal}/webapps/${warname}.war").delete();
        file("${tomcatHomeLocal}/webapps/${warname}").deleteDir();
        println "Undeployed!"
    }

}

task redeployLocal(dependsOn: ["undeployLocal", "deployLocal"]) {
    description = "Redeploys the module to local web-container"

    doLast {
        println "Redeploying application locally"
    }
}